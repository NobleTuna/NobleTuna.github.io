<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tuna&#39;s Room</title>
  
  <subtitle>개설중...</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="http://NobleTuna.github.io/"/>
  <updated>2019-06-25T14:37:32.888Z</updated>
  <id>http://NobleTuna.github.io/</id>
  
  <author>
    <name>NobleTuna</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>빅데이터 도메인 학습</title>
    <link href="http://NobleTuna.github.io/2019/06/25/bigdata/"/>
    <id>http://NobleTuna.github.io/2019/06/25/bigdata/</id>
    <published>2019-06-24T22:09:31.000Z</published>
    <updated>2019-06-25T14:37:32.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/apartmentCloud.JPG" alt="2019-03-30 19:26"></p><p>수업내용을 내가 이해한대로 받아적은것이라 난잡하다<br>어설프게 한글사이에 영어가 섞여있는건 강사님의 말을 내 뇌피유가 따라가지 못했기 때문<br>관련 프로젝트 진행하기 전에 한번 훑으면 아이디어 등에 도움될듯 해서 남긴다</p><hr><h3 id="클러스터링-Clustering"><a href="#클러스터링-Clustering" class="headerlink" title="클러스터링(Clustering)"></a>클러스터링(Clustering)</h3><p>데이터를 유사도에 의해서 K개의 그룹으로 나누는것<br>추천 시스템에서 주로 사용</p><ul><li>백화점 고객을 구매 상품에 따라서 클러스터링함</li><li>추천 시스템을 의해 고객의 과거 패턴을 이용해서 클러스터링 함</li><li>Gene 데이터를 유사도에 따라서 클러스터링 함</li><li>텍스트 문서들을 주제에 따라서 클러스터링 함</li><li>Facebook 에서 이미지들을 유사한 이미지들로 클러스터링을 함</li><li>Call center에서 고객과 통화한 내용을 텍스트로 변환 하여 그 내용에 나타나는 단어나 어휘구나 어휘 절을 추출하고 이를 이용하여 각각의 통화내역을 그룹으로 나누어서 회사에 걸러온 상담 내용을 카테고리 별로 나누어 보고 각 카테고리 별로 요약 정보를 만들어냄</li></ul><p>클러스터링을 다 비교해가면서 하기엔 시간이 많이 소모되므로 대부분 근사치를 이용한 클러스터링을 사용한다.</p><hr><h3 id="K-Means-Clustering"><a href="#K-Means-Clustering" class="headerlink" title="K-Means Clustering"></a>K-Means Clustering</h3><p>평균점을 계산하여 센터를 계속 찾은 후 (무게중심) 각 센터에 가까운 것들끼리 클러스터링, 반복<br>클러스터링 변화가 없으면 멈춤<br>처음에 랜덤하게 시작하는 파티션에 따라서 결과값이 다르기 때문에 여러번 시도하고 그중에 가장 좋은 것으로 결정</p><p><strong>단점</strong></p><ul><li>클러스터링 사이즈가 잘 맞지 않음(?)</li><li>클러스터가 공 모양으로 나온다</li><li>outliers가 있을 경우 평균점 계산때문에 부정확한 결과가 나옴 -&gt; K-Medoids 알고리즘</li></ul><p>간단하지만 실제로 사용하지 않음</p><hr><h3 id="Hierarchical-Clustering-계층-구조"><a href="#Hierarchical-Clustering-계층-구조" class="headerlink" title="Hierarchical Clustering (계층 구조)"></a>Hierarchical Clustering (계층 구조)</h3><p>top-down(하향식), bottom-up(상향식) 방식 두가지가 있음<br>보통 bottom-up 방식 사용</p><p>토너먼트 대진표처럼 가까운것끼리 묶어나감<br>가장 가까운 클러스터 두개를 merge, 클러스터가 k개가 될때까지 반복<br>어떤 distance function을 쓰냐에 따라서 다름</p><p><strong>distance function(각 클러스터간의 거리를 무엇을 기준으로 비교할 것인가)</strong></p><ul><li>single-link : 각각 클러스터링 안에 제일 가까운 데이터 거리를 비교하고 머지</li><li>complete-link : 각각 클러스터링 안에서 제일 먼 데이터를 비교하고 머지, 클러스터 크기는 작게나옴</li><li>average-link : 각 클러스터의 데이터끼리 1:1로 거리를 비교하고 평균을냄</li><li>mean-link : 섞어놓고 전체 모든 점들간 거리 평균을 계산함</li><li>controid-link  : 클러스터링의 센터값과 거리가 제일 가까운것과 머지,센터는 보통 평균을 씀, 여러개이면 랜덤한것을 클러스터링, 중심은 그것들의 센터값으로 비교</li></ul><p><strong>단점</strong></p><ul><li>centroid-link 를 사용하면 k-means와 비슷하게됨 (동그랗게)</li><li>single link를 사용하면 클러스터가 길쭉하게 나옴</li><li>디스턴스 펑션에 따라 아웃라이어를 포함하는 경우도 생김</li><li>속도가 느림(데이터 갯수에 세제곱에 비례함)</li></ul><p><strong>장점</strong></p><ul><li>k-means와 다르게 최대 거리조건을 주면 클러스터 개수를 지정하지 않아도 (카테고리 갯수를 몰라도 ) 결과를 알 수 있음</li></ul><hr><h3 id="DBSCAN-Clustering"><a href="#DBSCAN-Clustering" class="headerlink" title="DBSCAN Clustering"></a>DBSCAN Clustering</h3><p>점 하나에서 같은 반지름으로 묶어지는놈들을 계속해서 merge<br>unvisited 한놈을 계속해서 진행하면서 merge. 약간 2차원 BFS같은 느낌<br>반지름과 (eps) 최소 몇개이상 모여야 클러스터로 인정할 것인가에 따라서 결과가 다름</p><hr><h3 id="EM-Algorithm-Clustering"><a href="#EM-Algorithm-Clustering" class="headerlink" title="EM Algorithm Clustering"></a>EM Algorithm Clustering</h3><p>모수에 대한 입력값(초기값)이 여러개가 나올것이고 그중에 확률적으로 제일 높은것을 선택<br>정규분포(클러스터)를 수정해가면서 정확도를 올림<br>생성모델 사용<br>생성모델(Generative Model) :  레이블이 없는 데이터도 학습하여 분류하는 모델</p><p>likelihood : 가능도. 확률<br>likelihood 가 제일 높은것으로 선택<br>결과값을 가지고 입력값을 추측하는 느낌<br>클러스터링마다 각 점마다 각 클러스터에 들어갈 확률을 수치화함<br>(그만큼 다른것들보다 자원소모(메모리)같은게 더 요구됨)</p><hr><h3 id="PLSI"><a href="#PLSI" class="headerlink" title="PLSI"></a>PLSI</h3><p>생성모델 사용<br>몇개의 주제에 대해 클러스터링 해라<br>-&gt; 각각의 단어마다 주제를 선택하고 주제에 대해 단어집에서 나올 확률을 보고 확률이 높은 단어 선정</p><p>(주제를 뽑을 확률) * (단어를 뽑을 확률)</p><p>우리가 이런식으로 글을 쓴다는 모델<br>모든 단어를 카운트하면 너무 커지니까 단어수에 제한을 두어 벡터화함<br>EM Clustering과 마찬가지로 각 단어가 어떤 주제에 해당하는지 알 수 있음</p><hr><h3 id="Content-based-filtering-method"><a href="#Content-based-filtering-method" class="headerlink" title="Content based filtering method"></a>Content based filtering method</h3><p>item 이나 product등과 같은 actual content를 이용함<br>각 아이템간의 연관도를 이용해서 추천함</p><hr><h3 id="Collaborative-filtering-method"><a href="#Collaborative-filtering-method" class="headerlink" title="Collaborative filtering method"></a>Collaborative filtering method</h3><p>각각의 유저는 비슷한 다른 유저와 동일하게 행동한다는 가정을 한 메소드<br>누군가의 추천이 다른 유저들의 추천에 영향을 끼침<br>User 가 직접 점수를 매긴 item들에 대한 rating 을 이용해서 추천<br>다른 유저들의 의견을 이용함 </p><p>유저의 평가, 샀다 안샀다 등의 유저 정보로<br>유저의 평가를 보고 비슷한 평가군의 추천을 해줌<br>memory based method : 평가내역등을 가지고 비슷하게 평가<br>model based method : 과거의 레이팅으로 데이터로 구체적인 벡터(모델)을 만들어서 평가 (PLSI), matrix factorization</p><hr><h3 id="Matrix-Factorization-행렬-분해"><a href="#Matrix-Factorization-행렬-분해" class="headerlink" title="Matrix Factorization(행렬 분해)"></a>Matrix Factorization(행렬 분해)</h3><p>곱해서 평점 매트릭스가 나오는 k개의 세로 유저행과 k개의 가로 영화수의 행렬을 구하고 곱해서 만든 행렬로 빈칸(평점을 매기지 않은 영화)를 추측할 수 있다.</p><p>학습을 통해 벡터를 내적했을때, 결과가 현재 가지고 있는 평점 데이터와 비슷한 벡터 두개(유저, 아이템)를 구함</p><p>곱하는 행렬이 여러개가 나올 수 있으니 정확하지 않을 수 있음<br>-&gt; summary등 다른 텍스트 정보를 이용해 각각 벡터에 PLSI를 사용해 주제확률로 범위를 좁혀 좀더 정확한 행렬을 찾을 수 있음 </p><p>단, 텍스트 정보가 연관성이 없을 경우 더 부정확한 결과가 나올 수 있으므로 PLSI를 먼저 확인하여 데이터 연관성, 노이즈 정도를 확인하고 사용해야한다</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/image/apartmentCloud.JPG&quot; alt=&quot;2019-03-30 19:26&quot;&gt;&lt;/p&gt;
&lt;p&gt;수업내용을 내가 이해한대로 받아적은것이라 난잡하다&lt;br&gt;어설프게 한글사이에 영어가 섞여있는건 강사님의 말을 내 뇌피유가 따라
      
    
    </summary>
    
      <category term="Development" scheme="http://NobleTuna.github.io/categories/Development/"/>
    
      <category term="BigData" scheme="http://NobleTuna.github.io/categories/Development/BigData/"/>
    
    
      <category term="bigdata" scheme="http://NobleTuna.github.io/tags/bigdata/"/>
    
      <category term="clustering" scheme="http://NobleTuna.github.io/tags/clustering/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 명령어 기록</title>
    <link href="http://NobleTuna.github.io/2019/06/23/hexo1/"/>
    <id>http://NobleTuna.github.io/2019/06/23/hexo1/</id>
    <published>2019-06-23T14:05:56.000Z</published>
    <updated>2019-06-23T22:16:37.143Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/scaryKitty.JPG" alt="집 뒤 유치원에 세워진 헬로키티(무섭다)"></p><h2 id="Hexo-포스팅에-주로-쓰는-명령어들-정리"><a href="#Hexo-포스팅에-주로-쓰는-명령어들-정리" class="headerlink" title="Hexo 포스팅에 주로 쓰는 명령어들 정리"></a>Hexo 포스팅에 주로 쓰는 명령어들 정리</h2><p>초안 생성<br><code>hexo new draft &quot;파일명&quot;</code></p><p>로컬에서 초안 확인<br><code>hexo server --draft</code></p><p>초안파일을 post로 이동<br><code>hexo publish &quot;파일명&quot;</code></p><p>글 수정이나 삭제시 디플로이 전에 실행<br><code>hexo clean</code></p><p>파일 생성후 업로드 (generate deploy)<br><code>hexo g -d</code></p><p>참고로 커맨드에서 복사는 컨트롤+Insert</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/image/scaryKitty.JPG&quot; alt=&quot;집 뒤 유치원에 세워진 헬로키티(무섭다)&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo-포스팅에-주로-쓰는-명령어들-정리&quot;&gt;&lt;a href=&quot;#Hexo-포스팅에-주로-쓰는-명령어들-정리&quot; cl
      
    
    </summary>
    
      <category term="Development" scheme="http://NobleTuna.github.io/categories/Development/"/>
    
      <category term="Hexo" scheme="http://NobleTuna.github.io/categories/Development/Hexo/"/>
    
    
      <category term="hexo" scheme="http://NobleTuna.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>첫 포스팅</title>
    <link href="http://NobleTuna.github.io/2019/06/23/firstPost/"/>
    <id>http://NobleTuna.github.io/2019/06/23/firstPost/</id>
    <published>2019-06-23T13:48:39.000Z</published>
    <updated>2019-06-23T22:14:53.570Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/warnning_ormag.JPG" alt="오르막"></p><p>미뤄뒀던 블로그를 개설했다.</p><p>꾸준히 운영할지는 알수없음</p><p>로고랑 나머지는 다음에 하기로 하자</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/image/warnning_ormag.JPG&quot; alt=&quot;오르막&quot;&gt;&lt;/p&gt;
&lt;p&gt;미뤄뒀던 블로그를 개설했다.&lt;/p&gt;
&lt;p&gt;꾸준히 운영할지는 알수없음&lt;/p&gt;
&lt;p&gt;로고랑 나머지는 다음에 하기로 하자&lt;/p&gt;

      
    
    </summary>
    
      <category term="Diary" scheme="http://NobleTuna.github.io/categories/Diary/"/>
    
    
      <category term="잡담" scheme="http://NobleTuna.github.io/tags/%EC%9E%A1%EB%8B%B4/"/>
    
  </entry>
  
</feed>
